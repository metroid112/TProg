/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.4
 * Generated at: 2018-10-15 14:23:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import datatypes.*;
import java.util.*;
import utils.*;
import java.text.*;

public final class consulta_005fusuario_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 @SuppressWarnings("unchecked") 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("utils");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("datatypes");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!doctype html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/extras/head.jsp", out, false);
      out.write("\n");
      out.write("\t<title>UyTube - Consulta Usuario</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/extras/header.jsp", out, false);
      out.write("\n");
      out.write("<div class=\"contenedor\">\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/extras/sidebar.jsp", out, false);
      out.write("\n");
      out.write("\t<div class=\"contenido\">\n");
      out.write("\t");
      out.write('\n');
      out.write('	');
      out.write('	');

		switch((String) request.getAttribute("STATE")) {
			case "LISTAR":
				List<String> listaUsuarios = (LinkedList<String>) request.getAttribute("USUARIOS");
				if (listaUsuarios.isEmpty()) { 
      out.write("\n");
      out.write("\t\t\t\t\t<h1>No hay usuarios.</h1>\n");
      out.write("\t\t \t ");
 } else { 
      out.write("\n");
      out.write("\t\t\t\t\t<form action=\"ConsultaUsuario\" method=\"GET\">\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"STATE\" value=\"INFO\">\n");
      out.write("\t\t\t\t\t\t<select class=\"form-control form-control-lg\" name=\"usuario\" required>\n");
      out.write("             \t\t ");
 for (String usuario : listaUsuarios) { 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print( usuario );
      out.write('"');
      out.write('>');
      out.print( usuario );
      out.write("</option>\n");
      out.write("         \t\t\t\t");
 } 
      out.write("\n");
      out.write("\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t\t<button>Seleccionar</button>\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("     ");
 }
			break;
		case "INFO":
			DtUsuario usuario = (DtUsuario) request.getAttribute("USUARIO");
  		List<DtVideo> videos = (List<DtVideo>) request.getAttribute("VIDEOS");
  		List<DtLista> listas = (List<DtLista>) request.getAttribute("LISTAS");
  		List<String> seguidores = (List<String>) request.getAttribute("SEGUIDORES");
  		List<String> seguidos = (List<String>) request.getAttribute("SEGUIDOS");
  		DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
 			if (usuario == null) { 
      out.write("\n");
      out.write("  \t\t\t<h1>Usuario ");
      out.print( usuario.nick );
      out.write(" no existe</h1>\n");
      out.write("     ");
	} else { 
      out.write("\n");
      out.write("  \t\t\t<h1>INFO USUARIO</h1>\n");
      out.write("  \t\t\t<h2>");
      out.print( usuario.nick );
      out.write("</h2>\n");
      out.write("  \t\t\t<div class=\"head-item\" align=\"right\">\n");
      out.write("  \t\t\t\t<div class=\"thumbnail2\">\n");
      out.write("  \t\t\t\t\t<img alt=\"Imagen de ");
      out.print( usuario.nick );
      out.write("\" src=\"");
      out.print( usuario.imgPath );
      out.write("\">\n");
      out.write("  \t\t\t\t</div>\n");
      out.write("  \t\t\t</div>\n");
      out.write("  \t\t\t<br>\n");
      out.write("  \t\t\tNombre: ");
      out.print( usuario.nombre + " " + usuario.apellido );
      out.write("\n");
      out.write("  \t\t\t<br>\n");
      out.write("  \t\t\tFecha de nacimiento: ");
      out.print( dateFormat.format(usuario.fechaNacimiento) );
      out.write("\n");
      out.write("  \t\t\t<br>\n");
      out.write("  \t\t\t<h2>CANAL: ");
      out.print( usuario.canal );
      out.write("</h2>\n");
      out.write("  \t\t\tDescripci√≥n: ");
      out.print( usuario.descripcionCanal );
      out.write("\n");
      out.write("  \t\t\t<br>\n");
      out.write("  \t\t\tCategoria: ");
      out.print( usuario.categoria );
      out.write("\n");
      out.write("  \t\t\t<h3>VIDEOS PUBLICOS</h3>\n");
      out.write("     \t\t");
 for(DtVideo video : videos) { 
      out.write("\n");
      out.write("  \t\t\t\t<form action=\"ConsultaVideo\" method=\"GET\">\n");
      out.write("\t  \t\t\t\t<input name=\"VIDEO_ID\" value=\"");
      out.print( video.idVideo );
      out.write("\" type=\"hidden\">\n");
      out.write("\t  \t\t\t\t<button>");
      out.print( video.nombre );
      out.write("</button>\n");
      out.write("\t  \t\t\t</form>\n");
      out.write("\t  \t\t\t<br>\n");
      out.write("     \t\t");
 } 
      out.write("\n");
      out.write("\t\t\t<h3>LISTAS PUBLICAS</h3>\n");
      out.write("     \t\t");
	for(DtLista lista : listas) { 
      out.write("\n");
      out.write("\t\t\t\t\t<form action=\"ConsultaLista\" method=\"GET\">\n");
      out.write("\t\t\t\t\t\t<input name=\"STATE\" value=\"DETALLESLISTA\" type=\"hidden\">\n");
      out.write("\t\t\t\t\t\t<input name=\"IDLISTA\" value=\"");
      out.print( lista.getId() );
      out.write("\" type=\"hidden\">\n");
      out.write("\t\t\t\t\t\t<button>");
      out.print( lista.getNombre() );
      out.write("</button>\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t\t<br>\n");
      out.write("     ");
	} 
      out.write("\n");
      out.write("\t\t\t\t<h2>ESTADISTICAS</h2>\n");
      out.write("\t\t\t\tSeguidores: ");
      out.print( seguidores.size() );
      out.write("\n");
      out.write("\t\t\t\t<br>\n");
      out.write("     ");
	for(String seguidor : seguidores) { 
      out.write("\n");
      out.write("\t\t\t \t\t");
      out.print( seguidor );
      out.write("\n");
      out.write("\t\t\t\t<br>\n");
      out.write("     ");
 } 
      out.write("\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t\tSeguidos: ");
      out.print( seguidos.size() );
      out.write("\n");
      out.write("\t\t\t<br>\n");
      out.write("   ");
 for(String seguido : seguidos) { 
      out.write("\n");
      out.write("\t\t\t\t");
      out.print( seguido );
      out.write("\n");
      out.write("\t\t\t\t<br>\n");
      out.write("   ");
 } 
      out.write("\n");
      out.write("   ");
 if(session.getAttribute("LOGIN") != null && session.getAttribute("LOGIN").equals(EstadoSesion.LOGIN_CORRECTO)) {
				DtUsuario usuarioLogueado = (DtUsuario) session.getAttribute("USUARIO_LOGEADO");
				if(usuarioLogueado.nick.equals(usuario.nick)) { 
      out.write("\n");
      out.write("\t\t\t\t  \t<!-- Modificar Usuario --> \n");
      out.write("     ");
 } else { 
      out.write("\n");
      out.write("     \t\t\t");

     			boolean sigue = (boolean) request.getAttribute("SIGUE");
     			String textoSeguir = sigue ? "Dejar de seguir" : "Seguir";
     			String metodoSeguir = sigue ? "DEJAR_SEGUIR" : "SEGUIR";
     			
      out.write("\n");
      out.write("\t\t\t  \t<form action=\"Seguidores\" method=\"GET\">\n");
      out.write("\t\t\t  \t\t<input name=\"ACCION\" value=\"");
      out.print( metodoSeguir );
      out.write("\" type=\"hidden\">\n");
      out.write("\t\t\t  \t\t<input name=\"USUARIO_SEGUIDO\" value=\"");
      out.print( usuario.nick );
      out.write("\" type=\"hidden\">\n");
      out.write("\t\t\t  \t\t<input name=\"USUARIO_SEGUIDOR\" value=\"");
      out.print( usuarioLogueado.nick );
      out.write("\" type=\"hidden\">\n");
      out.write("\t\t\t  \t\t<button>");
      out.print( textoSeguir );
      out.write("</button>\n");
      out.write("\t\t\t\t</form>\n");
      out.write("     ");
	}
 			} 
      out.write('\n');
      out.write(' ');
 }
		break;
	default: 
      out.write("\n");
      out.write("\t  <h1>ERROR</h1>\n");
} 
      out.write("\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/extras/script.jsp", out, false);
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
